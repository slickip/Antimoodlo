{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://37.220.83.144:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавьте интерцептор для авторизации, если нужно\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default {\n  // Работа с тестами\n  getQuizzes() {\n    return api.get('/Quizzes');\n  },\n  createQuiz(quizData) {\n    return api.post('/Quizzes', quizData);\n  },\n  deleteQuiz(id) {\n    return api.delete(`/Quizzes/${id}`);\n  },\n  // Работа с вопросами\n  createQuestion(quizId, questionData) {\n    return api.post(`/Quizzes/${quizId}/questions`, questionData);\n  },\n  // Работа с вариантами ответов\n  createOption(questionId, optionData) {\n    return api.post(`/Questions/${questionId}/options`, optionData);\n  },\n  // Работа с правильными ответами\n  addCorrectAnswer(questionId, answerData) {\n    return api.post(`/Questions/${questionId}/answers/correct`, answerData);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","getQuizzes","get","createQuiz","quizData","post","deleteQuiz","id","delete","createQuestion","quizId","questionData","createOption","questionId","optionData","addCorrectAnswer","answerData"],"sources":["C:/Users/bagda/moodle/src/services/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://37.220.83.144:8080/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Добавьте интерцептор для авторизации, если нужно\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default {\r\n  // Работа с тестами\r\n  getQuizzes() {\r\n    return api.get('/Quizzes');\r\n  },\r\n  createQuiz(quizData) {\r\n    return api.post('/Quizzes', quizData);\r\n  },\r\n  deleteQuiz(id) {\r\n    return api.delete(`/Quizzes/${id}`);\r\n  },\r\n\r\n  // Работа с вопросами\r\n  createQuestion(quizId, questionData) {\r\n    return api.post(`/Quizzes/${quizId}/questions`, questionData);\r\n  },\r\n\r\n  // Работа с вариантами ответов\r\n  createOption(questionId, optionData) {\r\n    return api.post(`/Questions/${questionId}/options`, optionData);\r\n  },\r\n\r\n  // Работа с правильными ответами\r\n  addCorrectAnswer(questionId, answerData) {\r\n    return api.post(`/Questions/${questionId}/answers/correct`, answerData);\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,+BAA+B;AAEpD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAe;EACb;EACAK,UAAUA,CAAA,EAAG;IACX,OAAOZ,GAAG,CAACa,GAAG,CAAC,UAAU,CAAC;EAC5B,CAAC;EACDC,UAAUA,CAACC,QAAQ,EAAE;IACnB,OAAOf,GAAG,CAACgB,IAAI,CAAC,UAAU,EAAED,QAAQ,CAAC;EACvC,CAAC;EACDE,UAAUA,CAACC,EAAE,EAAE;IACb,OAAOlB,GAAG,CAACmB,MAAM,CAAC,YAAYD,EAAE,EAAE,CAAC;EACrC,CAAC;EAED;EACAE,cAAcA,CAACC,MAAM,EAAEC,YAAY,EAAE;IACnC,OAAOtB,GAAG,CAACgB,IAAI,CAAC,YAAYK,MAAM,YAAY,EAAEC,YAAY,CAAC;EAC/D,CAAC;EAED;EACAC,YAAYA,CAACC,UAAU,EAAEC,UAAU,EAAE;IACnC,OAAOzB,GAAG,CAACgB,IAAI,CAAC,cAAcQ,UAAU,UAAU,EAAEC,UAAU,CAAC;EACjE,CAAC;EAED;EACAC,gBAAgBA,CAACF,UAAU,EAAEG,UAAU,EAAE;IACvC,OAAO3B,GAAG,CAACgB,IAAI,CAAC,cAAcQ,UAAU,kBAAkB,EAAEG,UAAU,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}